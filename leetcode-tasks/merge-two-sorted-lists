/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
		ListNode* head=new ListNode(-1);
		ListNode* current=head;
        
		while(l1 || l2)
		{
			if(not l1 || (l1 && l2 && l2->val<=l1->val))
			{
				current->next=new ListNode(l2->val);
				l2=l2->next;
				current=current->next;
			}
			else if(not l2 || (l2 && l1 && l1->val<=l2->val))
			{
				current->next=new ListNode(l1->val);
				l1=l1->next;
				current=current->next;
			}
		}

		return head->next;

	}
};
